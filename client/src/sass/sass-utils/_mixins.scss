
// ----------------------------------------------
// Theming Mixins
// ----------------------------------------------
@mixin light-theme {
  background-color: $bg-light;
  color: $fg-light;
}
@mixin dark-theme {
  background-color: $bg-dark;
  color: $fg-dark;
}

// ----------------------------------------------
// Mixin: Media Queries
// ----------------------------------------------
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (max-width: #{$bp-sm}) { @content; }
  } @else if $breakpoint == md {
    @media (max-width: #{$bp-md}) { @content; }
  } @else if $breakpoint == lg {
    @media (max-width: #{$bp-lg}) { @content; }
  }
}

@mixin row($gap: $default-gap) {
  display: flex;
  flex-wrap: wrap;
  margin-left: -($gap / 2);
  margin-right: -($gap / 2);
}

@mixin col($span: 6, $total: 12, $gap: $default-gap) {
  width: percentage($span / $total);
  padding-left: ($gap / 2);
  padding-right: ($gap / 2);

  // Example: On smaller screens, span full width
  @include respond-to(sm) {
    width: 100%;
  }
}

@mixin screen($size, $type: max, $pixels: $breakpoint-small) {
  @if $size == 'small' {
    @media screen and ($type + -width: $breakpoint-small) {
        @content;
    }
  }
  @else if $size == 'med-small' {
    @media screen and ($type + -width: $breakpoint-med-small) {
        @content;
    }
  }
  @else if $size == 'medium' {
    @media screen and ($type + -width: $breakpoint-med-small) {
        @content;
    }
  }
 @else if $size == 'large' {
    @media screen and ($type + -width: $breakpoint-med) {
        @content;
    }
  }
  @else if $size == 'custom' {
    @media screen and ($type + -width: $pixels + px) {
     @content;
    }
  }
  @else {
    @content;
  }
}

@mixin center($position) {
    position: absolute;

    @if $position == 'vertical' {
        top: 50%;
        -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
        transform: translateY(-50%);
    }
    @else if $position == 'horizontal' {
        left: 50%;
        -webkit-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
        transform: translate(-50%);
    }
    @else if $position == 'both' {
        top: 50%;
        left: 50%;
        -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
    }
}

@mixin container($background, $padding, $borderRadius) {
  background: $background;
  padding: $padding;
  border-radius: $borderRadius;
}